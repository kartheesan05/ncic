





To add a door model that swings open when the user presses a button nearby in Unity (with XR Interaction Toolkit), follow these steps:

🧱 1. Add a Door Model
Option A: Use a built-in placeholder
* Right-click in the Hierarchy → 3D Object > Cube
* Scale it to look like a door (e.g., X: 1, Y: 2, Z: 0.1)
* Name it Door
Option B: Use a real door model
* Import a .fbx or .obj model of a door into your Assets folder
* Drag it into the scene and position it properly

🔁 2. Setup Door Hinge
To swing the door:
1. Empty GameObject → right-click on Door in Hierarchy → Create Empty Parent
2. Name the parent DoorHinge
3. Position the DoorHinge pivot at the door's side edge (where the hinge would be)
4. The Door object becomes a child of DoorHinge
You'll animate the DoorHinge instead of the door directly.

🎮 3. Add a Button Nearby
1. Right-click in Hierarchy → XR > UI > Pressable Button
2. Position it near the door
3. Change its label (optional): Find the Text child object and rename to "Open Door"

⚙️ 4. Write the Door Script
Create a new C# script called DoorController.cs:
using UnityEngine;

public class DoorController : MonoBehaviour
{
    public Transform doorHinge;
    public float openAngle = 90f;
    public float speed = 2f;

    private bool isOpen = false;

    public void ToggleDoor()
    {
        isOpen = !isOpen;
    }

    void Update()
    {
        float targetAngle = isOpen ? openAngle : 0f;
        Quaternion targetRotation = Quaternion.Euler(0, targetAngle, 0);
        doorHinge.localRotation = Quaternion.Slerp(doorHinge.localRotation, targetRotation, Time.deltaTime * speed);
    }
}

🧩 5. Connect Button to Door Script
1. Attach DoorController.cs to a GameObject (e.g., the DoorHinge)
2. In the Inspector, drag the DoorHinge transform into the script’s field
3. On the Pressable Button, scroll to On Pressed
4. Click + to add a new event
5. Drag the DoorHinge (with the script) into the object field
6. From the dropdown, select DoorController → ToggleDoor()

🧪 6. Test It!
* Enter Play Mode
* Press the virtual button using your VR controller
* The door should smoothly swing open (or closed if pressed again)

Let me know if you'd like:
* Auto-closing after delay
* Sound effect on open
* Lock/unlock system



Perfect! You can easily make a Cube act like a button in Unity using the XR Interaction Toolkit. Here's how to set up a physical cube button that opens a door when pressed:

✅ Summary
You'll:
1. Use a cube as the button
2. Make it an interactable object
3. Detect the press via a XR Base Interactable event
4. Trigger the door to swing open

🔧 Step-by-Step: Cube Button to Open Door
1. Add a Cube as a Button
* Right-click in the Hierarchy → 3D Object > Cube
* Rename it to DoorButton
* Scale it to a small size (e.g., 0.2 x 0.1 x 0.2)
* Place it next to the door

2. Make the Cube Grabbable or Pressable
We’ll use XR Simple Interactable to trigger an action:
1. Select the DoorButton cube
2. In the Inspector, click Add Component → search for XR Simple Interactable
3. Optionally: Add a Box Collider (or make sure it has one)

3. Add the Door and Door Script
Use this DoorController.cs script (same as before):
using UnityEngine;

public class DoorController : MonoBehaviour
{
    public Transform doorHinge;
    public float openAngle = 90f;
    public float speed = 2f;
    private bool isOpen = false;

    public void ToggleDoor()
    {
        isOpen = !isOpen;
    }

    void Update()
    {
        float targetAngle = isOpen ? openAngle : 0f;
        Quaternion targetRotation = Quaternion.Euler(0, targetAngle, 0);
        doorHinge.localRotation = Quaternion.Slerp(doorHinge.localRotation, targetRotation, Time.deltaTime * speed);
    }
}
🔄 Attach this script to the DoorHinge GameObject (parent of the door mesh), and assign its own transform to the doorHinge field.

4. Connect the Cube to the Door Script
1. Select the DoorButton cube
2. In the XR Simple Interactable component:
    * Find the Select Entered event
    * Click the + button
    * Drag the DoorHinge GameObject (that has the script) into the object field
    * From the dropdown → choose: DoorController → ToggleDoor()

5. Playtest
* Hit Play (with VR headset connected)
* Point your controller at the cube and select it (trigger)
* The door should swing open or closed!

🧠 Optional Enhancements
* Add a press animation to the cube (e.g., move it down slightly)
* Add a sound effect when the button is pressed
* Add a cooldown timer to avoid rapid toggling
Let me know if you want those added!

